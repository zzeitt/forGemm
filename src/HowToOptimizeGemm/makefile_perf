OLD  := MMult0
NEW  := MMult_1x4_5
DIM  := 512

ifeq ($(NEW), MMult1)
	PREV := MMult0
else ifeq ($(NEW), MMult2)
	PREV := MMult1
else ifeq ($(NEW), MMult_1x4_3)
	PREV := MMult2
else ifeq ($(NEW), MMult_4x4_9)
	PREV := MMult_1x4_7
else
# stole from chatGPT, WATCH OUT SPACEs within expression!
	NUM_NEW := $(shell echo $(NEW) | sed 's/.*_\([0-9]*\)/\1/')
	GAP := 1
	NUM_PREV := $(shell echo $$(($(NUM_NEW)-$(GAP))))
	PREV := $(subst _$(NUM_NEW),_$(NUM_PREV),$(NEW))
endif

# print PREV
$(info PREV: $(PREV))

#
# sample makefile
#

CC         := gcc
LINKER     := $(CC)
CFLAGS     := -O2 -Wall -msse3
LDFLAGS    := -lm

UTIL       := copy_matrix.o \
              compare_matrices.o \
              random_matrix.o \
              dclock.o \
              REF_MMult.o \
              print_matrix.o

TEST_OBJS  := test_MMult.o $(NEW).o 

%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@
%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

test_MMult.x: $(TEST_OBJS) $(UTIL) parameters.h
	$(LINKER) $(TEST_OBJS) $(UTIL) $(LDFLAGS) \
        $(BLAS_LIB) -o $(TEST_BIN) $@ 

run:	
	make clean
	sed -i 's/PFIRST.*[0-9]\+/PFIRST\t$(DIM)/g' parameters.h 
	sed -i 's/PLAST.*[0-9]\+/PLAST\t$(DIM)/g' parameters.h 
	make test_MMult.x
	export OMP_NUM_THREADS=1
	export GOTO_NUM_THREADS=1
	perf stat -e cycles,L1-dcache-loads,L1-dcache-load-misses \
		-o perf_$(NEW)_$(DIM).txt \
		./test_MMult.x 

clean:
	rm -f *.o *~ core *.x

cleanall:
	rm -f *.o *~ core *.x output*.m *.eps *.png
